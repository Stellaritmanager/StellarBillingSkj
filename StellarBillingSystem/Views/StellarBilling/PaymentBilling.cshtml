@model PaymentTableViewModel

@{
    ViewData["Title"] = "PaymentBilling";
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml"; // Adjust layout path as needed
}



<script>
    function showPopup(message) {
        var popup = document.getElementById("popupMessage");
        var popupText = document.getElementById("popupMessageText");
        var popupOKButton = document.getElementById("popupOKButton");

        popupText.textContent = message; // Set the message text
        popup.style.display = "block";

        popupOKButton.addEventListener("click", function () {
            popup.style.display = "none"; // Hide the popup when OK button is clicked
        });
    }

    function handleMessages(message) {
        showPopup(message);
    }
</script>

<div id="popupMessage" class="dividerblack popborder" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: #f0f0f0; color: #fff; padding: 30px; border-radius: 10px; z-index: 1000; display: none; text-align: center;">
    <span id="popupMessageText" style="display: block; margin-bottom: 10px;"></span>
    <button id="popupOKButton" style="padding: 10px 20px; color: white; border: none; border-radius: 5px; cursor: pointer;">OK</button>
</div>

<style>
    .popborder {
        border: 10px solid #fff;
    }
</style>



<form asp-controller="StellarBilling">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    
    <input type="hidden" id="billId" name="BillID" value="@ViewBag.BillID" />
    <input type="hidden" id="billDate" name="BillDate" value="@ViewBag.BillDate" />
    <input type="hidden" id="billValue" name="BillValue" value="@ViewBag.BillValue" />
    <input type="hidden" id="branchID" name="BranchID" value="@ViewBag.BranchID" />


    <div class="row">
        <div class="col-md-12 col-lg-1">
        </div>
        <div class="col-md-12 col-lg-10">
            <div class="card">
                <div class="card-body dividerblack">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div class="container">
                            <center>
                            <h2 class="centered text-white" style="font-family:'Lucida Bright';">Payment Screen</h2>
                            </center>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />

    <div class="row" style="height:8%">
    </div>

    <div class="row gy-4">
        <div class="col-md-12 col-lg-1">
        </div>
        <div class="col-md-12 col-lg-10">
            <div class="card">
                <div class="card-body dividerblack ">

                    <div class="row gy-4">

                        <div class="col-md-12 col-lg-5">

                            <button type="submit" class="btn btn-primary" name="buttonType" value="AddPayment">AddPayment</button>

                        </div>
                    </div>

                    <div class="row gy-4">
                        <div class="col-md-12 col-lg-2" style="align-items:center">
                        
                           
                          

                                <center>

                                <label class="form-label" for="showToastPlacement">&nbsp;</label>
                                <button type="button" id="viewBillButton" class="btn btn-primary d-block">ViewBill</button>




                                

                                </center>
                            </div>
                            </div>
                            </div>


                        </div>
                       
                    </div>
                    <br/>
                 
              
           




        </div>
    </div>


  

    <div class="row gy-4">
        <div class="col-md-12 col-lg-1">
        </div>
        <div class="col-md-12 col-lg-10">
            <div class="card">
                <div class="card-body dividerblack">

                    @if (Model.Viewpayment != null)
                    {
                        
                        <div class="row gy-4">
                            <div class="col-md-12 col-lg-0.5">
                            </div>
                            <div class="col-md-12 col-lg-12">
                                <div class="card">
                                    <div class="card-body ">
                                        <div class="table-responsive">

                                            <center>
                                                <h2 class="centered text-white" style="font-family:'Lucida Bright';">Payment Details</h2>
                                            </center>
                                            <br />

                     
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>Select</th>
                                    <th>Payment Date</th>
                                    <th>Payment Description</th>
                                    <th>Payment Mode</th>
                                    <th>Transaction Number</th>
                                    <th>Payment Amount</th>
                                </tr>
                            </thead>
                            <tbody>

                                @for (int i = 0; i < Model.Viewpayment.Count; i++)
                                {
                                    var detail = Model.Viewpayment[i];
                                    <tr>
                                        <td>
                                            <input type="radio" name="selectedSlotId" value="@detail.PaymentDiscription" />
                                            @*  <input type="hidden" name="billDetails[@i].DetailID" value="@detail.DetailID" />
                                    <input type="hidden" name="billDetails[@i].BillID" value="@ViewBag.BillID" /> *@
                                        </td>
                                        <td>
                                                                <input type="date" class="form-control custom-date-picker" name="Viewpayment[@i].PaymentDate" value="@Model.Viewpayment[i].PaymentDate" />
                                        </td>
                                        <td>
                                            <input type="text" class="form-control" name="Viewpayment[@i].PaymentDiscription" value="@Model.Viewpayment[i].PaymentDiscription" readonly />
                                        </td>
                                        <td>
                                            <input type="text" class="form-control" name="Viewpayment[@i].PaymentMode" value="@Model.Viewpayment[i].PaymentMode" />
                                        </td>
                                        <td>
                                            <input type="text" class="form-control" name="Viewpayment[@i].PaymentTransactionNumber" value="@Model.Viewpayment[i].PaymentTransactionNumber" />
                                        </td>
                                        <td>
                                            <input type="text" class="form-control" name="Viewpayment[@i].PaymentAmount" value="@Model.Viewpayment[i].PaymentAmount" />

                                       
                                        </td>

                                    </tr>
                                }
                            </tbody>

                        </table>


                                            <br />

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>



                    }
                </div>

            </div>
        </div>
    </div>


    <center>
        <div class="row mt-4">
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary" name="buttonType" value="Save">SavePayment</button>
                <button type="submit" class="btn btn-primary" name="buttonType" value="DeletePaymentDetail">DeletePaymentDetail</button>
                <button type="submit" class="btn btn-primary" name="buttonType" value="DeletePayment">DeletePayment</button>
               </div>
        </div>
    </center>


    @if (ViewBag.Message != null)
    {
        <script>
            handleMessages("@ViewBag.Message");
        </script>
    }

    @if (ViewBag.ReedemMessage != null)
    {
        <script>
            handleMessages("@ViewBag.ReedemMessage");
        </script>
    }

    @if (ViewBag.DeleteMessage != null)
    {
        <script>
            handleMessages("@ViewBag.DeleteMessage");
        </script>
    }



</form>





<!-- Toast Container -->
<div id="toastContainer" class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1055;">
    <div id="customToast" class="toast fade" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Billing Info</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            <!-- Toast content will be injected here -->
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var viewBillButton = document.getElementById("viewBillButton");

        viewBillButton.addEventListener("click", function (event) {
            event.preventDefault(); // Prevent default form submission

            // Prepare AJAX request to call PaymentActionget
            var xhr = new XMLHttpRequest();
            xhr.open("GET", "/StellarBilling/PaymentActionget", true);
            xhr.setRequestHeader("Content-Type", "application/json");

            xhr.onload = function () {
                if (xhr.status === 200) {
                    // Parse the response JSON
                    var response = JSON.parse(xhr.responseText);

                    // Get the values from the response
                    var billId = response.billId;
                    var billDate = response.billDate;
                    var netPrice = response.billValue;
                    var balance = response.balance;

                    // Create toast content
                    var toastBody = `Bill ID: ${billId}<br>Bill Date: ${billDate}<br>Net Price: ${netPrice}<br>Balance: ${balance}`;

                    // Update the toast body with the dynamic content
                    var toastElement = document.querySelector("#customToast .toast-body");
                    toastElement.innerHTML = toastBody;

                    // Initialize and show the toast
                    var toast = new bootstrap.Toast(document.getElementById("customToast"), {
                        autohide: true,
                        delay: 5000 // Optional: Set the toast to hide automatically after 5 seconds
                    });

                    toast.show();
                } else {
                    // Handle error
                    console.error("Failed to fetch payment details.");
                }
            };

            xhr.send();
        });
    });


</script>
