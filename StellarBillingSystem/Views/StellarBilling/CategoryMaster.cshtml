@model CategoryMasterModel
@using System.Data
@using NonFactors.Mvc.Grid
@{
    ViewData["Title"] = "CategoryMaster";
}

<script>
    function showPopup(message) {
        var popup = document.getElementById("popupMessage");
        var popupText = document.getElementById("popupMessageText");
        var popupOKButton = document.getElementById("popupOKButton");

        popupText.textContent = message; // Set the message text
        popup.style.display = "block";

        popupOKButton.addEventListener("click", function () {
            popup.style.display = "none"; // Hide the popup when OK button is clicked
        });
    }

    function handleMessages(message) {
        showPopup(message);
    }
</script>

<div id="popupMessage" class="dividerblack popborder" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background-color: #f0f0f0; color: #fff; padding: 30px; border-radius: 10px; z-index: 1000; display: none; text-align: center;">
    <span id="popupMessageText" style="display: block; margin-bottom: 10px;"></span>
    <button id="popupOKButton" style="padding: 10px 20px; color: white; border: none; border-radius: 5px; cursor: pointer;">OK</button>
</div>

<style>
    .popborder {
        border: 10px solid #fff;
    }
</style>


<form asp-controller="StellarBilling">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>


    <div class="row">
        <div class="col-md-12 col-lg-0"></div>
        <div class="col-md-12 col-lg-12" style="padding: 0;">
            <div class="card" style="height:40px;">
                <div class="card-body dividerblack">
                    <div style="display: flex; align-items: center; height: 100%;">
                        <div class="container" style="text-align: left; width: 100%;">
                            <h2 class="centered text-white" style="font-family:'Lucida Bright'; margin: 0;">
                                Category Master
                            </h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="row" style="height:8%"></div>

    <div class="row" style="margin-top:60px">
        <div class="col-md-12 col-lg-0"></div>
        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-body dividerblack">
                    <div class="row gy-4">
                        <div class="col-md-12 col-lg-2"></div>
                        <div class="col-md-12 col-lg-4">
                            <div class="form-floating form-floating-outline mb-4">
                                <input type="CategoryID" class="form-control" placeholder="Category ID" name="CategoryID" value="@Model.CategoryID" required />
                                <label asp-for="CategoryID" class="control-label">Category ID</label>
                            </div>
                        </div>
                        <div class="col-md-12 col-lg-4">
                            <div class="form-floating form-floating-outline mb-4">
                                <input type="CategoryName" class="form-control" placeholder="Category Name" name="CategoryName" value="@Model.CategoryName" required/>
                                <label asp-for="CategoryName" class="control-label">Category Name</label>
                            </div>
                        </div>
                        <div class="col-md-12 col-lg-2" style="align-items:center">
                            <button type="submit" style="width:100px" value="Get" asp-action="GetCategory" formmethod="get" name="buttonType" class="btn btn-primary">Get</button>
                        </div>
                        <div class="col-md-12 d-flex justify-content-center">
                            <button type="submit" asp-action="AddCategory" value="save" name="buttonType" formmethod="post" class="btn btn-primary mx-2">Save</button>
                            <button type="submit" asp-action="AddCategory" value="Delete" name="buttonType" class="btn btn-primaryred mx-2">Delete</button>
                            <button type="submit" asp-action="AddCategory" value="DeleteRetrieve" name="buttonType" class="btn btn-primaryellow mx-2">Delete Retrieve</button>
                        </div>
                    </div>
                    <br />
                </div>
            </div>
        </div>
        <div class="col-md-12 col-lg-2"></div>
    </div>



    @{
        var dataTable = ViewData["Categorydata"] as DataTable;
    }


    <div class="row" style="margin-top:30px">
        <div class="col-md-12 col-lg-0"></div>
        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-body dividerblack">
                    <h3 class="centered text-white" style="font-family: 'Lucida Bright'; margin-bottom: 20px; text-align: center;">Categories</h3>
                    <table class="table table-striped table-bordered" style="border: 3px solid black;">
                        <thead style="background-color: black; color: white;">
            <tr>
                <th>CategoryID</th>
                <th>CategoryName</th>
             
            </tr>
        </thead>
        <tbody>
            @if (dataTable != null)
            {
                foreach (DataRow row in dataTable.Rows)
                {
                    <tr>
                        <td>@row["CategoryID"]</td>
                        <td>@row["CategoryName"]</td>
             
                    </tr>
                }
            }
        </tbody>
                    </table><div id="pagination-controls" style="text-align: center; margin-top: 10px;">
                        <button id="prev-btn" style="background-color: black; color: white; border: none; padding: 5px 10px; cursor: pointer; font-size: 16px; border-radius: 5px; margin: 0 5px;">&lt;&lt;</button>
                        <div id="page-numbers" style="display: inline-block; vertical-align: middle;"></div>
                        <button id="next-btn" style="background-color: black; color: white; border: none; padding: 5px 10px; cursor: pointer; font-size: 16px; border-radius: 5px; margin: 0 5px;">&gt;&gt;</button>
                    </div>

                    <script>
                        document.addEventListener('DOMContentLoaded', function () {
                            const rowsPerPage = 4; // Number of rows per page
                            const table = document.querySelector('.table tbody'); // Select the table body
                            const rows = Array.from(table.querySelectorAll('tr')); // Get all rows
                            const totalRows = rows.length; // Total number of rows
                            const totalPages = Math.ceil(totalRows / rowsPerPage); // Calculate total pages

                            let currentPage = 1; // Current page number

                            // Function to display rows for a given page
                            function showPage(page) {
                                rows.forEach((row, index) => {
                                    row.style.display = (Math.floor(index / rowsPerPage) + 1 === page) ? '' : 'none'; // Show or hide row
                                });

                                updatePageNumbers(); // Update the page number buttons
                                document.getElementById('prev-btn').disabled = (page === 1); // Disable 'prev' button if on first page
                                document.getElementById('next-btn').disabled = (page === totalPages); // Disable 'next' button if on last page
                            }

                            // Function to create and update page number buttons
                            function updatePageNumbers() {
                                const pageNumbersContainer = document.getElementById('page-numbers');
                                pageNumbersContainer.innerHTML = ''; // Clear previous buttons

                                // Create page number buttons
                                for (let i = 1; i <= totalPages; i++) {
                                    const pageButton = document.createElement('button');
                                    pageButton.textContent = i;
                                    pageButton.style.backgroundColor = (i === currentPage) ? 'black' : 'white'; // Highlight current page
                                    pageButton.style.color = (i === currentPage) ? 'white' : 'black';
                                    pageButton.style.border = 'none';
                                    pageButton.style.padding = '5px 10px';
                                    pageButton.style.cursor = 'pointer';
                                    pageButton.style.fontSize = '16px';
                                    pageButton.style.borderRadius = '5px';
                                    pageButton.style.margin = '0 3px';

                                    // Add click event listener to update current page
                                    pageButton.addEventListener('click', () => {
                                        currentPage = i;
                                        showPage(currentPage);
                                    });

                                    pageNumbersContainer.appendChild(pageButton); // Add button to container
                                }
                            }

                            // Event listener for 'prev' button
                            document.getElementById('prev-btn').addEventListener('click', () => {
                                if (currentPage > 1) {
                                    currentPage--;
                                    showPage(currentPage);
                                }
                            });

                            // Event listener for 'next' button
                            document.getElementById('next-btn').addEventListener('click', () => {
                                if (currentPage < totalPages) {
                                    currentPage++;
                                    showPage(currentPage);
                                }
                            });

                            showPage(currentPage); // Initial page display
                        });

                    </script>


                    




    @if (ViewBag.Message != null)
    {
        <script>
            handleMessages("@ViewBag.Message");
        </script>
        ViewBag.Message = null;
    }
    @if (ViewBag.ErrorMessage != null)
    {
        <script>
            handleMessages("@ViewBag.ErrorMessage");
        </script>
        ViewBag.ErrorMessage = null;
    }


                    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.24/css/jquery.dataTables.min.css">
                    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
                    <script src="https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js"></script>




</form>

