@model BillProductlistModel

@{
    ViewData["Title"] = "CustomerBilling";
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
}

<script>
    function showPopup(message) {
        var popup = document.getElementById("popupMessage");
        var popupText = document.getElementById("popupMessageText");
        var popupOKButton = document.getElementById("popupOKButton");

        popupText.textContent = message; // Set the message text
        popup.style.display = "block";

        // Close popup when OK button is clicked
        popupOKButton.addEventListener("click", function () {
            closePopup();
        });

        // Close popup when clicking outside of the message box
        document.addEventListener("click", function (event) {
            if (!popup.contains(event.target) && !popupOKButton.contains(event.target)) {
                closePopup();
            }
        });
    }

    function closePopup() {
        var popup = document.getElementById("popupMessage");
        popup.style.display = "none"; // Hide the popup
    }

    function handleMessages(message) {
        showPopup(message);
    }

</script>

<div id="popupMessage" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: rgba(255, 255, 255, 0.1); backdrop-filter: blur(10px); -webkit-backdrop-filter: blur(10px); color:black; padding: 30px; border: 1px solid #000000; border-radius: 10px; z-index: 1000; display: none; text-align: center;">
    <span id="popupMessageText" style="display: block; margin-bottom: 10px;"></span>
    <button id="popupOKButton" style="padding: 10px 20px; background-color: rgba(255, 255, 255, 0.2); color: black; border: none; border-radius: 5px; cursor: pointer;">OK</button>
</div>

<style>
    .popborder {
        border: 10px solid #fff;
    }
</style>


<form asp-controller="StellarBilling" asp-action="getCustomerBill" autocomplete="off" >
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">

        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-body dividerblack">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <div class="container">
                            <center>
                            <h2 class="centered text-white" style="font-family:'Lucida Bright';">Customer Billing</h2>
                            </center>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />

    <div class="row" style="height:8%">
    </div>

    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-body dividerblack">

                    <div class="row">
                        <div class="col-md-12 col-lg-3">
                            <div class="form-floating form-floating-outline mb-4">
                                <input type="BillID" class="form-control" placeholder="Bill ID" name="BillID" value="@Model.BillID" />
                                <label asp-for="BillID" class="control-label">Bill ID</label>


                            </div>
                           
                           
                        </div>

                        <div class="col-md-12 col-lg-3">

                            <div class="form-floating form-floating-outline mb-4 custom-date-picker">
                                <input asp-for="BillDate" type="date" value="@Model.BillDate" class="form-control" name="BillDate" max="@DateTime.Now.ToString("yyyy-MM-dd")" placeholder="BillDate" required />
                                <label asp-for="BillDate" class="control-label">Bill Date</label>
                                <span asp-validation-for="BillDate" class="text-danger"></span>
                            </div>

                        </div>
                        <div class="col-md-12 col-lg-3">
                            <div class="input-group">
                                <input type="tel" pattern="\d{10}" maxlength="10" id="CustomerNumber" asp-for="CustomerNumber" name="CustomerNumber" class="form-control" placeholder="Customer Number" value="@Model.CustomerNumber" required />
                                <span asp-validation-for="CustomerNumber" class="text-danger"></span>
                                <label class="control-label" for="CustomerNumber"></label>
                                <button class="btn btn-primary menu-icon tf-icons bx bx-user-plus" type="button" id="button-addon2" data-bs-toggle="modal" data-bs-target="#customerModal"></button>
                            </div>
                        </div>

                        <button type="button" style="width:95px; height:50px;" class="btn btn-primary ms-2" id="getCustomerDataButton">Get</button>
                        
                    </div>
                    <br />





                    <div class="row">


                        <div class="col-md-12 col-lg-4">
                            <div class="input-group">
                                @{
                                    var PatientID = ((IEnumerable<ProductMatserModel>)ViewData["productid"])
                                    .Select(m => new SelectListItem
            {
                Value = m.ProductID.ToString(), // Assuming ProductID is of type int
                Text = $"{m.ProductName}"
            });
                                }


                                <input type="text" id="productDropdownInput" class="form-control"  placeholder="Product Name" onkeyup="filterDropdown(event, 'productDropdownInput', 'productDropdown')" onclick="showDropdown('productDropdown')">
                                <ul id="productDropdown" class="list-group mt-2" style="display: none; position: absolute; z-index: 1000; width: 100%; max-height: 200px; overflow-y: auto; background-color: white; list-style-type: none; padding: 0;">
                                    @foreach (var item in PatientID)
                                    {
                                        <li class="list-group-item" data-value="@item.Value" onclick="selectDropdownItem('productDropdownInput', 'productID', '@item.Text', '@item.Value')" style="background-color: white; border: none;">@item.Text</li>
                                    }
                                </ul>
                                <input type="hidden" name="ProductID" id="productID" value="ProductID" />

                                <button class="btn btn-primary menu-icon tf-icons bx bx-cart" type="button" id="button-addon2" data-bs-toggle="modal" data-bs-target="#modalCenter"></button>

                            </div>

                           

                        </div>
                            



                            <div class="col-md-12 col-lg-3">

                                <div class="form-floating form-floating-outline mb-4">
                                    <input type="text" class="form-control" name="Barcode" placeholder="Barcode" value="@Model.BarCode" />
                                <label asp-for="BarCode" class="control-label">Barcode</label>
                                                       
                            </div>
                        </div>
                            <div class="col-md-12 col-lg-3">
                           
                            <div class="form-floating form-floating-outline mb-4">
                                <input type="text" class="form-control" name="Quantity" placeholder="Quantity" value="@Model.Quantity" />
                                <label asp-for="Quantity" class="control-label">Quantity</label>

                            </div>

                        </div>

                        <div class="col-md-12 col-lg-3">
                            <button type="submit" value="Add Product" name="buttonType" class="btn btn-primary">Add Product</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-body dividerblack">


                    @if (Model.Viewbillproductlist != null && Model.Viewbillproductlist.Any())
                    {


                        <div class="row gy-4">
                            <div class="col-md-12 col-lg-0.5">
                            </div>
                            <div class="col-md-12 col-lg-12">
                                <div class="card">
                                    <div class="card-body ">
                                        <div class="table-responsive">

                                            <center>
                                                <h2 class="centered text-black" style="font-family:'Lucida Bright';">Product List</h2>
                                            </center>
                                            <br />

                                            <table class="table  table-bordered" style="border: 3px solid #fff;">
                                                <thead style="background-color: black; color: white;">
                                                    <tr >
                                                        <th style="font-size:16px;color:white;border:1 px solid #fff;">Product ID</th>
                                                        <th style="font-size:16px;color:white;border:1 px solid #fff;">Product Name</th>
                                                        <th style="font-size:16px;color:white;border:1 px solid #fff;">Price</th>
                                                        <th style="font-size:16px;color:white;border:1 px solid #fff;">Quantity</th>
                                                        <th style="font-size:16px;color:white;border:1 px solid #fff;">Net Price</th>
                                                        <th style="font-size:16px;color:white;border:1 px solid #fff;">Actions</th>

                                                    </tr>
                                                </thead>
                                                <tbody class="card-body dividerblack">
                                                    @for (int i = 0; i < Model.Viewbillproductlist.Count; i++)
                                                    {
                                                        <tr class="product-row">

                                                            <td style="border:1px solid #000;">@Model.Viewbillproductlist[i].ProductID</td>
                                                            <td style="border:1px solid #000;;">@Model.Viewbillproductlist[i].ProductName</td>
                                                            <td style="border:1px solid #000;;">@Model.Viewbillproductlist[i].Price</td>
                                                            <td style="border:1px solid #000;">@Model.Viewbillproductlist[i].Quantity</td>
                                                            <td style="border:1px solid #000;">@Model.Viewbillproductlist[i].NetPrice</td>
                                                            <td style="border:1px solid #000;">
                                                                <a href="@Url.Action("DeleteProduct", new { productId = @Model.Viewbillproductlist[i].ProductID, billID = @Model.BillID, billDate = @Model.BillDate, customerNumber = @Model.CustomerNumber })" class="btn btn-primary">Delete Product</a>
                                                            </td>
                                                        </tr>


                                                    }
                                                   
                                                </tbody>
                                            </table>


                                            <br />

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    }


                </div>
            </div>
        </div>
    </div>



    </br>

 

        <div class="card">
            <div class="card-body dividerblack">

                <div class="row">
                    <div class="col-md-12 col-lg-4">
                        <div class="form-floating form-floating-outline mb-4">
                            <input type="Totalprice" id="Totalprice" class="form-control" name="Totalprice" placeholder="Total price" value="@ViewBag.TotalPrice" readonly />
                            <label asp-for="Totalprice" class="control-label">Total price</label>


                        </div>

                    </div>

                    <div class="col-md-12 col-lg-2">

                        <div class="form-floating form-floating-outline mb-4">
                            <input type="CGSTPercentage" id="CGSTPercentage" class="form-control" name="CGSTPercentage" placeholder="CGSTPercentage" value="@ViewBag.CGSTPercentage" />
                            <label asp-for="CGSTPercentage" class="control-label">CGST%</label>
                        </div>

                    </div>
                    <div class="col-md-12 col-lg-2">

                        <div class="form-floating form-floating-outline mb-4">
                            <input type="SGSTPercentage" id="SGSTPercentage" class="form-control" name="SGSTPercentage" placeholder="SGSTPercentage" value="@ViewBag.SGSTPercentage" />
                            <label asp-for="SGSTPercentage" class="control-label">SGST%</label>
                        </div>
                    </div>

                    <div class="col-md-12 col-lg-4">

                        <div class="form-floating form-floating-outline mb-4">
                            <input type="TotalDiscount" id="TotalDiscount" class="form-control" name="TotalDiscount" placeholder="Total Discount" value="@ViewBag.TotalDiscount" />
                            <label asp-for="TotalDiscount" class="control-label">Total Discount</label>

                        </div>

                    </div>
                </div>

              
                            <div class="row">
                              
                                <div class="col-md-12 col-lg-4">
                                    <div class="form-floating form-floating-outline mb-4">
                                        <input type="Points" class="form-control" name="Points" placeholder="Points" value="@ViewBag.Points" readonly />
                                        <label class="control-label">Points</label>
                                    </div>
                                </div>
@* 
                                <div class="col-md-12 col-lg-2">
                                    <button type="submit" value="Get Points" name="buttonType" class="btn btn-primary">Get Points</button>
                                </div> *@
                                <div class="col-md-12 col-lg-2">
                                    <button type="submit" value="Reedem Points" name="buttonType" class="btn btn-primary">Reedem Points</button>

                                </div>
                    <div class="col-md-12 col-lg-4">
                        <div class="form-floating form-floating-outline mb-4">
                        </div>
                    </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12 col-lg-8">
                        <div class="form-floating form-floating-outline mb-4">
                                    </div>
                    </div>
                            <div class="col-md-12 col-lg-4">
                                <div class="form-floating form-floating-outline mb-4">
                            <input type="NetPrice" id="NetPrice" class="form-control" name="NetPrice" placeholder="Net Price" value="@ViewBag.NetPrice" readonly />
                                    <label asp-for="NetPrice" class="control-label">Net Price</label> </div>

                                </div>

                                </div>

                            </div>
                        </div>
                    

    </br>

    <div class="row">
        
        <center>
            <button type="submit" value="Save" name="buttonType" class="btn btn-primary">Save</button>

            <button type="submit" value="Delete Bill" name="buttonType" class="btn btn-primary">Delete Bill</button>

            <button type="submit" value="Payment" name="buttonType" class="btn btn-primary">Payment</button>


            <button type="submit" value="Download Bill" name="buttonType" class="btn btn-primary">Download Bill</button>
        </center>


           

    </div>

    @if (ViewBag.SaveMessage != null)
    {
        <script>
            handleMessages("@ViewBag.SaveMessage");
        </script>
    }

    @if (ViewBag.Getnotfound != null)
    {
        <script>
            handleMessages("@ViewBag.Getnotfound");
        </script>
    }

    @if (ViewBag.DelMessage != null)
    {
        <script>
            handleMessages("@ViewBag.DelMessage");
        </script>
    }



</form>


<!-- Product Modal -->

<div class="modal fade" id="modalCenter" tabindex="-1" aria-labelledby="modalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalCenterTitle">Search Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="modalSearchForm" asp-controller="StellarBilling" asp-action="AddProductPop" method="post">


        @*             <div class="col mb-3">

                        <label asp-for="ProductID">Product ID</label>

                        <input type="text" class="form-control" id="ProductID" name="ProductID" placeholder="Product ID" />

                       




                    </div> *@

                    <div class="col mb-3">
                        <label for="searchInput">Barcode ID </label>
                        <input type="text" class="form-control" id="BarcodeId" name="BarcodeId" placeholder="Barcode ID" />

                       @*  <span asp-validation-for="BarCode" class="alert-danger">Bar ID</span>
 *@
                    </div>

                    <div class="col mb-3">
                        <label for="searchInput">Product Name</label>
                        <input type="text" class="form-control" id="ProductName" name="ProductName" placeholder="Product Name" />


                    </div>


                    <div class="col mb-3">
                        <label for="searchInput">Price </label>
                        <input type="text" class="form-control" id="Price" name="Price" placeholder="Price" />
                    </div>

                    <div class="col mb-3">
                        <label for="searchInput">Number of Stock</label>
                        <input type="text" class="form-control" id="NumberofStock" name="NumberofStock" placeholder="Number Of Stock" />
                    </div>


                  @*   <input type="hidden" id="SelectedProductID" name="SelectedProductID" value="">
                    <div id="modalResults"></div>
 *@


                </form>



            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveButton">Save</button>
            </div>
        </div>
    </div>
</div>


<!-- Get Customer Details Modal -->
<div class="modal fade" id="getCustomerDetailsModal" tabindex="-1" aria-labelledby="getCustomerDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="getCustomerDetailsModalLabel">Customer Product Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Select</th>
                            <th>Bill ID</th>
                            <th>Bill Date</th>
                            <th>Product Name</th>
                            <th>Product ID</th>
                        </tr>
                    </thead>
                    <tbody id="productTableBody">
                        
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="loadSelectedProduct">Load Selected Product</button>
            </div>
        </div>
    </div>
</div>


<!-- Customer Details Modal -->
<div class="modal fade" id="customerModal" tabindex="-1" role="dialog" aria-labelledby="customerModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="customerModalLabel">Enter Customer Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    
                </button>
            </div>
            <div class="modal-body">


                <form id="modalSearchFormcus" asp-controller="StellarBilling" asp-action="AddCustomerPop" method="post">
              
                    <div class="col mb-3">

                       

                        <label asp-for="CustomerNumber" >Mobile Number</label>
                        <input type="text" class="form-control" id="MobileNumber" name="MobileNumber" placeholder="Mobile Number" />

                        

                    </div>

                    <div class="col mb-3">
                        <label for="searchInput">Customer Name </label> 
                        <input type="text" class="form-control" id="CustomerName" name="CustomerName" placeholder="Customer Name"/>
                    </div>


                    <div class="col mb-3">
                        <label for="searchInput">Customer Address </label>
                        <input type="text" class="form-control" id="Address" name="Address" placeholder="Address" />
                    </div>

                </form>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="saveCustomer">Save Customer</button>
                    </div>
                
            </div>
        </div>
    </div>
</div>


<script>
    let suppressInputEvent = false;

    function filterDropdown(event, inputId, dropdownId) {
        if (suppressInputEvent) return; // Prevent filtering if input event is suppressed

        const input = document.getElementById(inputId);
        const dropdown = document.getElementById(dropdownId);
        const filter = input.value.toLowerCase();
        const items = dropdown.querySelectorAll('li');

        items.forEach(item => {
            const text = item.textContent.toLowerCase();
            item.style.display = text.includes(filter) ? '' : 'none';
        });

        dropdown.style.display = 'block'; // Show dropdown when filtering
    }

    function showDropdown(dropdownId) {
        const dropdown = document.getElementById(dropdownId);
        dropdown.style.display = 'block';
    }

    function selectDropdownItem(inputId, hiddenId, text, value) {
        const input = document.getElementById(inputId);
        const dropdown = document.getElementById('productDropdown');

        // Set the selected value in the input and hidden input
        input.value = text;
        document.getElementById(hiddenId).value = value;

        // Hide the dropdown after selection
        dropdown.style.display = 'none';

        // Set the flag to suppress the input event momentarily
        suppressInputEvent = true;

        // Remove suppression after a short delay to allow normal input behavior again
        setTimeout(() => {
            suppressInputEvent = false;
        }, 200);
    }

    document.addEventListener('DOMContentLoaded', () => {
        const input = document.getElementById('productDropdownInput');
        const dropdown = document.getElementById('productDropdown');

        // Adjust margin-top as needed
        dropdown.style.marginTop = '4rem'; // Adjust margin-top to ensure dropdown doesn't overlap with the label

        let highlightedIndex = -1;

        function getVisibleItems() {
            return Array.from(dropdown.querySelectorAll('li')).filter(item => item.style.display !== 'none');
        }

        input.addEventListener('input', (event) => {
            filterDropdown(event, 'productDropdownInput', 'productDropdown');
            highlightedIndex = -1; // Reset highlight when input changes
        });

        input.addEventListener('keydown', (event) => {
            const visibleItems = getVisibleItems();

            switch (event.key) {
                case 'ArrowDown':
                    if (highlightedIndex < visibleItems.length - 1) {
                        highlightedIndex++;
                        updateHighlight(visibleItems);
                        event.preventDefault(); // Prevent default behavior
                    }
                    break;
                case 'ArrowUp':
                    if (highlightedIndex > 0) {
                        highlightedIndex--;
                        updateHighlight(visibleItems);
                        event.preventDefault(); // Prevent default behavior
                    }
                    break;
                case 'Enter':
                    if (highlightedIndex >= 0) {
                        const item = visibleItems[highlightedIndex];
                        selectDropdownItem('productDropdownInput', 'productID', item.textContent, item.getAttribute('data-value'));
                        highlightedIndex = -1;
                        event.preventDefault(); // Prevent default behavior
                    }
                    break;
                case 'Escape':
                    dropdown.style.display = 'none'; // Close dropdown on escape
                    highlightedIndex = -1;
                    break;
            }
        });

        function updateHighlight(visibleItems) {
            visibleItems.forEach((item, index) => {
                item.style.backgroundColor = (index === highlightedIndex) ? '#000000' : 'white';
            });
            visibleItems[highlightedIndex]?.scrollIntoView({ block: 'nearest' });
        }

        // Click event to close dropdown when clicking outside
        document.addEventListener('click', (event) => {
            const target = event.target;
            if (!dropdown.contains(target) && target !== input) {
                dropdown.style.display = 'none';
            }
        });
    });
</script>






<!-- Add Bootstrap JavaScript and jQuery  -->

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>

<!--Modal Script for Product Master-->
<script>
    $(document).ready(function () {
        // Handle the form submission in the modal for product search
        $('#modalSearchForm').on('submit', function (e) {
            e.preventDefault();
            var productID = $('#ProductID').val();
            var barcodeID = $('#BarcodeId').val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("PopupView", "StellarBilling")',
                data: {
                    ProductID: productID,
                    BarcodeId: barcodeID
                },
                success: function (result) {
                    $('#modalResults').html(result);
                },
                error: function (error) {
                    console.log(error);
                    alert('Error occurred during the search.');
                }
            });
        });


        // Clear input fields when the modal is about to be shown
        $('#modalCenter').on('show.bs.modal', function () {
            $('#ProductID').val('');
            $('#ProductName').val('');
            $('#BarcodeId').val('');
            $('#Price').val('');
            $('#NumberofStock').val('');
        });

        // Handle the Save button click in the modal
        $('#saveButton').on('click', function () {
            var productID = $('#ProductID').val();
            var productName = $('#ProductName').val();
            var barcodeID = $('#BarcodeId').val();
            var price = $('#Price').val();
            var numberOfStock = $('#NumberofStock').val();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddProductPop", "StellarBilling")',
                data: {
                    ProductID: productID,
                    ProductName: productName,
                    BarcodeId: barcodeID,
                    Price: price,
                    NumberOfStock: numberOfStock,
                   
                },
                success: function (result) {
                    $('#modalCenter').modal('hide');
                    // Optionally, reload or update content
                },
                error: function (error) {
                    console.log(error);
                    alert('Error occurred during saving.');
                }
            });
        });
    });
</script>



<!-- Add Javascript for Customer Master Pop -->

<script>


    $(document).ready(function () {
        // Handle the form submission in the modal for Customer search
        $('#modalSearchFormcus').on('submit', function (e) {
            e.preventDefault();
            var productID = $('#ProductID').val();
            var barcodeID = $('#BarcodeId').val();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("PopupView", "StellarBilling")',
                data: {
                    CustomerNumber: customernumber,
                },
                success: function (result) {
                    $('#modalResults').html(result);
                },
                error: function (error) {
                    console.log(error);
                    alert('Error occurred during the search.');
                }
            });
        });


        // Clear input fields when the modal is about to be shown
        $('#customerModal').on('show.bs.modal', function () {
            $('#MobileNumber').val('');
            $('#CustomerName').val('');
            $('#Address').val('');
        });

        // Handle the Save customer button click in the modal
        $('#saveCustomer').on('click', function () {
            var customernumber = $('#MobileNumber').val();
            var customername = $('#CustomerName').val();
            var Address = $('#Address').val();
           

            $.ajax({
                type: 'POST',
                url: '@Url.Action("AddCustomerPop", "StellarBilling")',
                data: {
                    MobileNumber: customernumber,
                    CustomerName: customername,
                    Address: Address,
                   

                },
                success: function (result) {
                    $('#customerModal').modal('hide');
                    // Optionally, reload or update content
                },
                error: function (error) {
                    console.log(error);
                    alert('Error occurred during saving.');
                }
            });
        });
    });

</script>


<!-- Add Javascript for Get customer bill Data Get Button -->

<script>

    $(document).ready(function () {
        $('#getCustomerDataButton').on('click', function () {
           
            var customerNumber = $('input[name="CustomerNumber"]').val();


            $.ajax({
                url: '@Url.Action("getcustomerpop", "StellarBilling")',
                type: 'POST',
                data: {
                   
                    CustomerNumber: customerNumber
                },
                success: function (response) {
                    console.log('Server Response:', response); // Log the response to check data

                    var tableBody = $('#productTableBody');
                    tableBody.empty(); // Clear existing table data

                    if (Array.isArray(response) && response.length > 0) {
                        response.forEach(function (item) {
                            var row = $('<tr>');
                            row.append('<td><input type="radio" class="form-check-input" name="selectedProduct" value="' + item.productID + '"></td>');
                            row.append('<td>' + (item.billID || '') + '</td>');
                            row.append('<td>' + (item.billDate || '') + '</td>');
                            row.append('<td>' + (item.productName || '') + '</td>');
                            row.append('<td>' + (item.productID || '') + '</td>');
                            tableBody.append(row);
                        });
                    } else {
                        tableBody.append('<tr><td colspan="5">No data available</td></tr>');
                    }

                    $('#getCustomerDetailsModal').modal('show'); // Show the modal
                },
                error: function (xhr, status, error) {
                    console.error('AJAX Error:', status, error); // Log any AJAX errors
                    alert('An error occurred while fetching data.');
                }
            });
        });


        //for selectedproduct
        $('#loadSelectedProduct').on('click', function () {
            var selectedProduct = $('input[name="selectedProduct"]:checked');

            if (selectedProduct.length > 0) {
                // Find the row containing the selected radio button
                var row = selectedProduct.closest('tr');

                // Extract the data from the row cells
                var billID = row.find('td:eq(1)').text().trim();
                var billDate = row.find('td:eq(2)').text().trim();
                var customerNumber = $('input[name="CustomerNumber"]').val(); 
               

               
                if (billID && billDate && customerNumber) {
                    // Redirect to the controller with the extracted values
                    window.location.href = '@Url.Action("LoadBill", "StellarBilling")?billID=' + encodeURIComponent(billID) + '&billDate=' + encodeURIComponent(billDate) + '&customerNumber=' + encodeURIComponent(customerNumber) + '&selectedValues=' + encodeURIComponent(selectedProduct.val());
                } else {
                    alert('Please ensure all fields are filled.');
                }
            } else {
                alert('Please select at least one product.');
            }
        });

    });


</script>


<!-- Add Javascript for Tax and discount -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const totalPriceInput = document.getElementById('Totalprice');
        const cgstPercentageInput = document.getElementById('CGSTPercentage');
        const sgstPercentageInput = document.getElementById('SGSTPercentage');
        const totalDiscountInput = document.getElementById('TotalDiscount');
        const netPriceInput = document.getElementById('NetPrice');

        function calculateNetPrice() {
            const totalPrice = parseFloat(totalPriceInput.value) || 0;
            const cgstPercentage = parseFloat(cgstPercentageInput.value) || 0;
            const sgstPercentage = parseFloat(sgstPercentageInput.value) || 0;
            const discountPercentage = parseFloat(totalDiscountInput.value) || 0;

            const cgstAmount = (totalPrice * cgstPercentage) / 100;
            const sgstAmount = (totalPrice * sgstPercentage) / 100;
            const discountAmount = (totalPrice * discountPercentage) / 100;

            const netPrice = totalPrice + cgstAmount + sgstAmount - discountAmount;

            netPriceInput.value = netPrice.toFixed(2);
        }

        function setupEventListeners() {
            cgstPercentageInput.addEventListener('blur', calculateNetPrice);
            sgstPercentageInput.addEventListener('blur', calculateNetPrice);
            totalDiscountInput.addEventListener('blur', calculateNetPrice);
        }

        setupEventListeners();
    });
</script>
<script>
        document.addEventListener('DOMContentLoaded', function () {
        const phoneInput = document.getElementById('CustomerNumber');

            phoneInput.addEventListener('input', function (e) {
                // Remove non-numeric characters
                this.value = this.value.replace(/\D/g, '');
            });

            phoneInput.addEventListener('keydown', function (e) {
                // Allow backspace, delete, tab, escape, enter, and arrow keys
                if ([46, 8, 9, 27, 13, 37, 38, 39, 40].indexOf(e.keyCode) !== -1) {
                    return;
                }
                // Prevent typing if the input already has 10 characters
                if (this.value.length >= 10) {
                    e.preventDefault();
                }
            });
        });
</script>

