@model StellarBillingSystem.Models.RollAccessMaster

@{
    ViewData["Title"] = "RollAccessMaster";
    Layout = "~/Views/Shared/_ContentNavbarLayout.cshtml";
}

<script>
    function showPopup(message) {
        var popup = document.getElementById("popupMessage");
        var popupText = document.getElementById("popupMessageText");
        var popupOKButton = document.getElementById("popupOKButton");

        popupText.textContent = message; // Set the message text
        popup.style.display = "block";

        // Close popup when OK button is clicked
        popupOKButton.addEventListener("click", function () {
            closePopup();
        });

        // Close popup when clicking outside of the message box
        document.addEventListener("click", function (event) {
            if (!popup.contains(event.target) && !popupOKButton.contains(event.target)) {
                closePopup();
            }
        });
    }

    function closePopup() {
        var popup = document.getElementById("popupMessage");
        popup.style.display = "none"; // Hide the popup
    }

    function handleMessages(message) {
        showPopup(message);
    }

</script>

<div id="popupMessage" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: rgba(255, 255, 255, 0.1); backdrop-filter: blur(10px); -webkit-backdrop-filter: blur(10px); color:black; padding: 30px; border: 1px solid #000000; border-radius: 10px; z-index: 1000; display: none; text-align: center;">
    <span id="popupMessageText" style="display: block; margin-bottom: 10px;"></span>
    <button id="popupOKButton" style="padding: 10px 20px; background-color: rgba(255, 255, 255, 0.2); color: black; border: none; border-radius: 5px; cursor: pointer;">OK</button>
</div>

<style>
    .popborder {
        border: 10px solid #fff;
    }
</style>
        <form asp-action="AddRollmaster" asp-controller="StellarBilling">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>


    <div class="row">
        <div class="col-md-12 col-lg-0"></div>
        <div class="col-md-12 col-lg-12" style="padding: 0;">
            <div class="card" style="height:40px;">
                <div class="card-body dividerblack">
                    <div style="display: flex; align-items: center; height: 100%;">
                        <div class="container" style="text-align: left; width: 100%;">
                            <h2 class="centered text-white" style="font-family:'Lucida Bright'; margin: 0;">
                                RollAccess Master
                            </h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />

    <div class="row" style="height:8%"></div>

    <div class="row" style="margin-top:60px">
        <div class="col-md-12 col-lg-0"></div>
        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-body dividerblack">
                    <div class="row gy-4">
                        <div class="col-md-12 col-lg-2"></div>
                        <div class="col-md-12 col-lg-4">

                            <div class="form-floating form-floating-outline mb-4">
                @{
                    var Staffid = ((IEnumerable<StaffAdminModel>)ViewData["staffid"])
                    .Select(m => new SelectListItem
            {
                Value = m.StaffID.ToString(), // Assuming ScreenId is of type int
                Text = $"{m.FullName}"
            });
                }

                @Html.DropDownListFor(model => model.StaffID, Staffid, "Select Staff ", new { @class = "form-control", required = "required" })
                                <label asp-for="StaffID" class="control-label">Staff Name</label>
                <span asp-validation-for="StaffID" class="text-danger"></span>
            </div>

                        </div>


                        <div class="col-md-12 col-lg-4">

                        <div id="rollNamesSection" class="form-floating form-floating-outline mb-4">

                            <div id="rollNamesCheckboxes">


                                    <fieldset class="border p-2">

                                <legend class="w-auto">Select Rolls</legend>

                                @foreach (var rollOption in (IEnumerable<RollTypeMaster>)ViewData["rollid"])
                                {

                                            bool isChecked = ViewData["StaffRoles"] != null &&
                                            ((List<String>)ViewData["StaffRoles"]).Contains(rollOption.RollID);

                                            <div class="form-check">
                                                <input class="form-check-input" type="checkbox" id="RollNames_@rollOption.RollID" name="SelectedRollNames" value="@rollOption.RollID" @(isChecked ? "checked" : "")>
                                                <label class="form-check-label" for="RollNames_@rollOption.RollID">@rollOption.RollID - @rollOption.RollName</label>
                                            </div>
                                }
                            </div>
                              
                         </fieldset>

                        </div>

                        </div>
                        

                            <button type="submit" style="width:95px; height:50px;" value="Get" name="buttonType" class="btn btn-primary ms-2">Get</button>


                       
                        <div class="col-md-12 d-flex justify-content-center">


                            <button type="submit"  value="Save" name="buttonType" class="btn btn-primary mx-2">Save</button>
                            <button type="submit"  value="Delete" name="buttonType" class="btn btn-primaryred mx-2">Delete</button>
                            <button type="submit" value="DeleteRetrieve" name="buttonType" class="btn btn-primaryellow mx-2">Delete Retrieve</button>

                        </div>

                    </div>



                    


                </div>
            </div>


        </div>

    </div>
   
   

            @if (ViewBag.Message != null)
            {
                <script>
                    handleMessages("@ViewBag.Message");
                </script>
            }

            @if (ViewBag.getMessage != null)
            {
                <script>
                    handleMessages("@ViewBag.getMessage");
                </script>
            }

            @if (ViewBag.delMessage != null)
            {
                <script>
                    handleMessages("@ViewBag.delMessage");
                </script>
            }

            @if (ViewBag.delnoMessage != null)
            {
                <script>
                    handleMessages("@ViewBag.delnoMessage");
                </script>
            }

            @if (ViewBag.retMessage != null)
            {
                <script>
                    handleMessages("@ViewBag.retMessage");
                </script>

            }

            @if (ViewBag.noretMessage != null)
            {
                <script>
                    handleMessages("@ViewBag.noretMessage");
                </script>
            }
    @if (ViewBag.ErrorMessage != null)
    {
        <script>
            handleMessages("@ViewBag.ErrorMessage");
        </script>
    }

    @if (ViewBag.ErrorMessage != null)
    {
        <script>
            handleMessages("@ViewBag.ErrorMessage");
        </script>
    }


        </form>
